AWSTemplateFormatVersion: '2010-09-09'
Description: Nuxt with aws-lambda test

Resources:
  NuxtLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: nuxt-demo-lambda-role
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  NuxtLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: nuxt-demo-lambda-function
      Handler: index.handler
      Role: !GetAtt NuxtLambdaRole.Arn
      Code: ./lambda.zip
      Runtime: nodejs22.x
      MemorySize: 512
      Timeout: 30
      Environment:
        Variables:
          NODE_ENV: production
  
  NuxtLambdaPermissionForUrlInvoke:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunctionUrl
      FunctionName: !Ref NuxtLambdaFunction
      Principal: "cloudfront.amazonaws.com"
      SourceArn: !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${NuxtDistribution.Id}"
  
  NuxtLambdaFunctionUrl:
    Type: AWS::Lambda::Url
    Properties:
      TargetFunctionArn: !GetAtt NuxtLambdaFunction.Arn
      AuthType: AWS_IAM
      Cors:
        AllowOrigins:
          - '*'
        AllowMethods:
          - '*'
        AllowHeaders:
          - '*'
        MaxAge: 86400  # 24 hours

  NuxtLambdaLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${NuxtLambdaFunction}
      RetentionInDays: 7

  NuxtDistributionOAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: nuxt-demo-oac
        OriginAccessControlOriginType: lambda
        SigningBehavior: always
        SigningProtocol: sigv4
        Description: "OAC of NuxtLambdaFunction"

  NuxtDistributionS3OAC:
    Type: AWS::CloudFront::OriginAccessControl
    Properties:
      OriginAccessControlConfig:
        Name: nuxt-demo-s3-oac
        SigningBehavior: always
        SigningProtocol: sigv4
        OriginAccessControlOriginType: s3
        Description: "OAC of NuxtPublicBucket"

  NuxtDistributionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: LambdaInvokePolicy
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action: lambda:InvokeFunctionUrl
                Resource: !GetAtt NuxtLambdaFunction.Arn

  NuxtDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          TargetOriginId: NuxtLambdaOrigin
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad # CachingDisabled
          OriginRequestPolicyId: b689b0a8-53d0-40ab-baf2-68738e2966ac # AllViewerExceptHostHeader
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - PathPattern: "/_nuxt/*"
            TargetOriginId: NuxtPublicBucketOrigin
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
            ViewerProtocolPolicy: redirect-to-https
          - PathPattern: "/*.*"
            TargetOriginId: NuxtPublicBucketOrigin
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6 # CachingOptimized
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf # CORS-S3Origin
            ViewerProtocolPolicy: redirect-to-https
        Origins:
          - Id: NuxtLambdaOrigin
            DomainName: !Select [2, !Split ["/", !GetAtt NuxtLambdaFunctionUrl.FunctionUrl]]
            OriginAccessControlId: !GetAtt NuxtDistributionOAC.Id
            CustomOriginConfig:
              OriginProtocolPolicy: https-only
          - Id: NuxtPublicBucketOrigin
            DomainName: !GetAtt NuxtPublicBucket.RegionalDomainName
            OriginAccessControlId: !GetAtt NuxtDistributionS3OAC.Id
            S3OriginConfig: {}

  NuxtPublicBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: nuxt-demo-public-bucket
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        IgnorePublicAcls: true
        BlockPublicPolicy: true
        RestrictPublicBuckets: true

  NuxtPublicBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref NuxtPublicBucket
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: cloudfront.amazonaws.com
            Action: "s3:GetObject"
            Resource: !Sub "${NuxtPublicBucket.Arn}/*"
            Condition:
              StringEquals:
                "AWS:SourceArn": !Sub "arn:aws:cloudfront::${AWS::AccountId}:distribution/${NuxtDistribution.Id}"

Outputs:
  NuxtDistributionDomainName:
    Description: The CloudFront distribution domain name
    Value: !GetAtt NuxtDistribution.DomainName
